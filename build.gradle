plugins {
    id 'com.palantir.docker' version '0.20.1' apply false
}
apply plugin: 'application'
apply plugin: 'com.palantir.docker'
apply plugin: 'maven-publish'

group 'com.ds.iot'
version '1.0-SNAPSHOT'

// Put all versions of frameworks here.
ext {
    // build tool
    gradleVersionExt = "5.2.1"                                             // 28.01.2019 (4.10.2 -> 5.2.1)

    //JAVA11
    jaxbApiVersion = "2.3.1"
    javaxAnnotationApiVersion = "1.3.2"

}

wrapper {
    gradleVersion = "${gradleVersionExt}"
}

targetCompatibility = '11.0'
sourceCompatibility = '11.0'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()

    dependencies {
        compile group: 'com.typesafe.akka', name: 'akka-actor_2.12', version: '2.5.23'
        compile group: 'com.typesafe.akka', name: 'akka-actor-typed_2.12', version: '2.5.23'
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'
        compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.9'
        compile 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.0'
        compile 'org.springframework:spring-websocket:5.0.5.RELEASE'
        compile 'org.springframework:spring-messaging:5.0.5.RELEASE'
        compile 'org.springframework.boot:spring-boot-starter-websocket:2.1.6.RELEASE' 
        compile group: 'org.json', name: 'json', version: '20180813'
        compile group: 'com.hivemq', name: 'hivemq-mqtt-client-shaded', version: '1.1.0'
        compile group: 'org.apache.commons', name: 'commons-text', version: '1.6'
        compile 'redis.clients:jedis:3.1.0'
        compile 'org.junit.jupiter:junit-jupiter-api:5.3.2'
        compile 'org.junit.jupiter:junit-jupiter-params:5.3.2'
        compile group: 'commons-io', name: 'commons-io', version: '2.6'
        compile group: 'net.lingala.zip4j', name: 'zip4j', version: '2.1.4'
        compile 'com.rabbitmq:amqp-client:5.7.3'
        compile 'io.github.classgraph:classgraph:4.8.47'
        compile group: 'com.microsoft.azure.sdk.iot', name: 'iot-device-client', version: '1.18.0'
        compile group: 'com.microsoft.azure.sdk.iot', name: 'iot-service-client', version: '1.18.0'

    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    // Java11
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.2'
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation group: 'org.javassist', name: 'javassist', version: '3.24.1-GA'
    implementation 'io.dropwizard.metrics:metrics-core:4.0.5'

    annotationProcessor 'org.projectlombok:lombok:1.18.4'
    compileOnly 'org.projectlombok:lombok:1.18.4'

    testCompile(
            'org.junit.jupiter:junit-jupiter-api:5.3.2',
            'org.junit.jupiter:junit-jupiter-params:5.3.2',
            'org.mockito:mockito-junit-jupiter:2.23.4',
    )

    testRuntime(
            'org.junit.jupiter:junit-jupiter-engine:5.3.2',
            'org.hsqldb:hsqldb:2.4.1',
    )
}

test {
    useJUnitPlatform()
}

compileJava {
    // Allow json ser/deser of immutable beans without annotations in jackson
    options.compilerArgs << "-parameters"
    options.encoding = "UTF-8"
    options.annotationProcessorGeneratedSourcesDirectory = file("${buildDir}/generated")
}

// Enable dependency report for multi-project build
task allDeps(type: DependencyReportTask, description: "dependencies task for all subprojects") {}
task allDepInsight(type: DependencyInsightReportTask, description: "dependenciesInsight task for all subprojects") {}

task testAll(type: Exec) {
    commandLine './test.sh'
}

// application plugin config
mainClassName = 'com.ds.iot.framework.Main'

docker {
    name 'felsywaschbaer/framework2:latest'
    files tasks.distTar
    pull false
}

task localDocker(type: Exec) {
    dependsOn(distTar)
    commandLine './scripts/local_docker.sh'
}

distTar {
    into(project.name) {
        from './src'
        include 'device_descriptions/*'
        from './'
        include 'output/*'
    }
}

publishing {
    publications {
        myLibrary(MavenPublication) {
            from components.java
        }
    }
}
